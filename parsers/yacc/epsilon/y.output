Terminals unused in grammar

   INC
   DEC
   FOR
   IMPORT
   EOF_SYMBOL


Grammar

    0 $accept: Program $end

    1 Program: TopLevel
    2        | Program TopLevel

    3 TopLevel: Declaration

    4 Declaration: FunctionDeclaration
    5            | VariableDeclaration

    6 FunctionDeclaration: FUNCTION NAME '(' FunctionParamList ')' Block
    7                    | FUNCTION NAME '(' ')' Block

    8 FunctionParamList: FunctionParam
    9                  | FunctionParamList ',' FunctionParam
   10                  | ',' VAR_LEN_PARAM

   11 FunctionParam: NAME

   12 Block: '{' BlockInner '}'
   13      | '{' '}'

   14 BlockInner: Statement
   15           | Declaration
   16           | BlockInner Statement
   17           | BlockInner Declaration

   18 Statement: Block
   19          | IfStatement
   20          | If1Statement
   21          | If2Statement
   22          | If3Statement
   23          | If4Statement
   24          | If5Statement
   25          | If6Statement
   26          | If7Statement
   27          | If8Statement
   28          | If9Statement
   29          | IfAStatement
   30          | IfBStatement
   31          | IfCStatement
   32          | ReturnStatement
   33          | ExpressionStatement

   34 IfStatement: IF '(' Expression ')' Block
   35            | IF '(' Expression ')' Block ELSE Block

   36 If1Statement: IF '(' Expression ')' Block ELSE1 Block

   37 If2Statement: IF '(' Expression ')' Block ELSE2 Block

   38 If3Statement: IF '(' Expression ')' Block ELSE3 Block

   39 If4Statement: IF '(' Expression ')' Block ELSE4 Block

   40 If5Statement: IF '(' Expression ')' Block ELSE5 Block

   41 If6Statement: IF '(' Expression ')' Block ELSE6 Block

   42 If7Statement: IF '(' Expression ')' Block ELSE7 Block

   43 If8Statement: IF '(' Expression ')' Block ELSE8 Block

   44 If9Statement: IF '(' Expression ')' Block ELSE9 Block

   45 IfAStatement: IF '(' Expression ')' Block ELSEA Block

   46 IfBStatement: IF '(' Expression ')' Block ELSEB Block

   47 IfCStatement: IF '(' Expression ')' Block ELSEC Block

   48 ReturnStatement: RETURN ';'
   49                | RETURN Expression ';'

   50 ExpressionStatement: Expression ';'

   51 VariableDeclaration: VAR VariableList ';'

   52 VariableList: InitDecl
   53             | VariableList ',' InitDecl

   54 InitDecl: NAME
   55         | NAME '=' Initializer

   56 Initializer: AssignmentExpression

   57 Expression: AssignmentExpression
   58           | Expression ',' AssignmentExpression

   59 AssignmentExpression: UnaryExpression AssignmentOperator AssignmentExpression
   60                     | ConditionalExpression

   61 AssignmentOperator: '='
   62                   | AMUL
   63                   | ADIV
   64                   | AMOD
   65                   | AADD
   66                   | ASUB
   67                   | ALEFTSHIFT
   68                   | ARIGHTSHIFT
   69                   | ALOGICALRIGHTSHIFT
   70                   | ABITAND
   71                   | ABITXOR
   72                   | ABITOR

   73 ConditionalExpression: LogicalOrExpression
   74                      | ConditionalExpression '?' Expression ':' LogicalOrExpression

   75 LogicalOrExpression: LogicalANDExpression
   76                    | LogicalOrExpression OR LogicalANDExpression

   77 LogicalANDExpression: EqualityExpression
   78                     | LogicalANDExpression AND EqualityExpression

   79 EqualityExpression: RelationalExpression
   80                   | EqualityExpression EQ RelationalExpression
   81                   | EqualityExpression NE RelationalExpression

   82 RelationalExpression: UnaryExpression
   83                     | RelationalExpression '<' UnaryExpression
   84                     | RelationalExpression '>' UnaryExpression
   85                     | RelationalExpression LTEQ UnaryExpression
   86                     | RelationalExpression GTEQ UnaryExpression

   87 UnaryExpression: PostfixExpression
   88                | '!' UnaryExpression

   89 PostfixExpression: PrimaryExpression
   90                  | PrimaryExpression FunctionCall

   91 FunctionCall: '(' ArgumentExpressionList ')'
   92             | '(' ')'

   93 ArgumentExpressionList: AssignmentExpression
   94                       | ArgumentExpressionList ',' AssignmentExpression

   95 PrimaryExpression: Literal
   96                  | '(' Expression ')'
   97                  | FunctionExpression

   98 FunctionExpression: FUNCTION '(' FunctionParamList ')' Block LAMBDA
   99                   | FUNCTION '(' ')' Block LAMBDA
  100                   | FUNCTION NAME '(' FunctionParamList ')' Block LAMBDA
  101                   | FUNCTION NAME '(' ')' Block LAMBDA

  102 Literal: INT
  103        | TRUE
  104        | FALSE
  105        | STRING
  106        | NULL_LITERAL
  107        | NAME


Terminals, with rules where they appear

$end (0) 0
'!' (33) 88
'(' (40) 6 7 34 35 36 37 38 39 40 41 42 43 44 45 46 47 91 92 96 98
    99 100 101
')' (41) 6 7 34 35 36 37 38 39 40 41 42 43 44 45 46 47 91 92 96 98
    99 100 101
',' (44) 9 10 53 58 94
':' (58) 74
';' (59) 48 49 50 51
'<' (60) 83
'=' (61) 55 61
'>' (62) 84
'?' (63) 74
'{' (123) 12 13
'}' (125) 12 13
error (256)
VAR_LEN_PARAM (258) 10
EQ (259) 80
NE (260) 81
AND (261) 78
OR (262) 76
INC (263)
DEC (264)
GTEQ (265) 86
LTEQ (266) 85
IF (267) 34 35 36 37 38 39 40 41 42 43 44 45 46 47
FOR (268)
ELSE (269) 35
RETURN (270) 48 49
FALSE (271) 104
TRUE (272) 103
IMPORT (273)
INT (274) 102
STRING (275) 105
NAME (276) 6 7 11 54 55 100 101 107
EOF_SYMBOL (277)
NULL_LITERAL (278) 106
ELSE1 (279) 36
ELSE2 (280) 37
ELSE3 (281) 38
ELSE4 (282) 39
ELSE5 (283) 40
ELSE6 (284) 41
ELSE7 (285) 42
ELSE8 (286) 43
ELSE9 (287) 44
ELSEA (288) 45
ELSEB (289) 46
ELSEC (290) 47
LAMBDA (291) 98 99 100 101
FUNCTION (292) 6 7 98 99 100 101
VAR (293) 51
AADD (294) 65
ASUB (295) 66
AMUL (296) 62
ADIV (297) 63
AMOD (298) 64
ALEFTSHIFT (299) 67
ARIGHTSHIFT (300) 68
ALOGICALRIGHTSHIFT (301) 69
ABITAND (302) 70
ABITXOR (303) 71
ABITOR (304) 72


Nonterminals, with rules where they appear

$accept (62)
    on left: 0
Program (63)
    on left: 1 2, on right: 0 2
TopLevel (64)
    on left: 3, on right: 1 2
Declaration (65)
    on left: 4 5, on right: 3 15 17
FunctionDeclaration (66)
    on left: 6 7, on right: 4
FunctionParamList (67)
    on left: 8 9 10, on right: 6 9 98 100
FunctionParam (68)
    on left: 11, on right: 8 9
Block (69)
    on left: 12 13, on right: 6 7 18 34 35 36 37 38 39 40 41 42 43
    44 45 46 47 98 99 100 101
BlockInner (70)
    on left: 14 15 16 17, on right: 12 16 17
Statement (71)
    on left: 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33, on right:
    14 16
IfStatement (72)
    on left: 34 35, on right: 19
If1Statement (73)
    on left: 36, on right: 20
If2Statement (74)
    on left: 37, on right: 21
If3Statement (75)
    on left: 38, on right: 22
If4Statement (76)
    on left: 39, on right: 23
If5Statement (77)
    on left: 40, on right: 24
If6Statement (78)
    on left: 41, on right: 25
If7Statement (79)
    on left: 42, on right: 26
If8Statement (80)
    on left: 43, on right: 27
If9Statement (81)
    on left: 44, on right: 28
IfAStatement (82)
    on left: 45, on right: 29
IfBStatement (83)
    on left: 46, on right: 30
IfCStatement (84)
    on left: 47, on right: 31
ReturnStatement (85)
    on left: 48 49, on right: 32
ExpressionStatement (86)
    on left: 50, on right: 33
VariableDeclaration (87)
    on left: 51, on right: 5
VariableList (88)
    on left: 52 53, on right: 51 53
InitDecl (89)
    on left: 54 55, on right: 52 53
Initializer (90)
    on left: 56, on right: 55
Expression (91)
    on left: 57 58, on right: 34 35 36 37 38 39 40 41 42 43 44 45 46
    47 49 50 58 74 96
AssignmentExpression (92)
    on left: 59 60, on right: 56 57 58 59 93 94
AssignmentOperator (93)
    on left: 61 62 63 64 65 66 67 68 69 70 71 72, on right: 59
ConditionalExpression (94)
    on left: 73 74, on right: 60 74
LogicalOrExpression (95)
    on left: 75 76, on right: 73 74 76
LogicalANDExpression (96)
    on left: 77 78, on right: 75 76 78
EqualityExpression (97)
    on left: 79 80 81, on right: 77 78 80 81
RelationalExpression (98)
    on left: 82 83 84 85 86, on right: 79 80 81 83 84 85 86
UnaryExpression (99)
    on left: 87 88, on right: 59 82 83 84 85 86 88
PostfixExpression (100)
    on left: 89 90, on right: 87
FunctionCall (101)
    on left: 91 92, on right: 90
ArgumentExpressionList (102)
    on left: 93 94, on right: 91 94
PrimaryExpression (103)
    on left: 95 96 97, on right: 89 90
FunctionExpression (104)
    on left: 98 99 100 101, on right: 97
Literal (105)
    on left: 102 103 104 105 106 107, on right: 95


State 0

    0 $accept: . Program $end

    FUNCTION  shift, and go to state 1
    VAR       shift, and go to state 2

    Program              go to state 3
    TopLevel             go to state 4
    Declaration          go to state 5
    FunctionDeclaration  go to state 6
    VariableDeclaration  go to state 7


State 1

    6 FunctionDeclaration: FUNCTION . NAME '(' FunctionParamList ')' Block
    7                    | FUNCTION . NAME '(' ')' Block

    NAME  shift, and go to state 8


State 2

   51 VariableDeclaration: VAR . VariableList ';'

    NAME  shift, and go to state 9

    VariableList  go to state 10
    InitDecl      go to state 11


State 3

    0 $accept: Program . $end
    2 Program: Program . TopLevel

    $end      shift, and go to state 12
    FUNCTION  shift, and go to state 1
    VAR       shift, and go to state 2

    TopLevel             go to state 13
    Declaration          go to state 5
    FunctionDeclaration  go to state 6
    VariableDeclaration  go to state 7


State 4

    1 Program: TopLevel .

    $default  reduce using rule 1 (Program)


State 5

    3 TopLevel: Declaration .

    $default  reduce using rule 3 (TopLevel)


State 6

    4 Declaration: FunctionDeclaration .

    $default  reduce using rule 4 (Declaration)


State 7

    5 Declaration: VariableDeclaration .

    $default  reduce using rule 5 (Declaration)


State 8

    6 FunctionDeclaration: FUNCTION NAME . '(' FunctionParamList ')' Block
    7                    | FUNCTION NAME . '(' ')' Block

    '('  shift, and go to state 14


State 9

   54 InitDecl: NAME .
   55         | NAME . '=' Initializer

    '='  shift, and go to state 15

    $default  reduce using rule 54 (InitDecl)


State 10

   51 VariableDeclaration: VAR VariableList . ';'
   53 VariableList: VariableList . ',' InitDecl

    ','  shift, and go to state 16
    ';'  shift, and go to state 17


State 11

   52 VariableList: InitDecl .

    $default  reduce using rule 52 (VariableList)


State 12

    0 $accept: Program $end .

    $default  accept


State 13

    2 Program: Program TopLevel .

    $default  reduce using rule 2 (Program)


State 14

    6 FunctionDeclaration: FUNCTION NAME '(' . FunctionParamList ')' Block
    7                    | FUNCTION NAME '(' . ')' Block

    NAME  shift, and go to state 18
    ')'   shift, and go to state 19
    ','   shift, and go to state 20

    FunctionParamList  go to state 21
    FunctionParam      go to state 22


State 15

   55 InitDecl: NAME '=' . Initializer

    FALSE         shift, and go to state 23
    TRUE          shift, and go to state 24
    INT           shift, and go to state 25
    STRING        shift, and go to state 26
    NAME          shift, and go to state 27
    NULL_LITERAL  shift, and go to state 28
    FUNCTION      shift, and go to state 29
    '('           shift, and go to state 30
    '!'           shift, and go to state 31

    Initializer            go to state 32
    AssignmentExpression   go to state 33
    ConditionalExpression  go to state 34
    LogicalOrExpression    go to state 35
    LogicalANDExpression   go to state 36
    EqualityExpression     go to state 37
    RelationalExpression   go to state 38
    UnaryExpression        go to state 39
    PostfixExpression      go to state 40
    PrimaryExpression      go to state 41
    FunctionExpression     go to state 42
    Literal                go to state 43


State 16

   53 VariableList: VariableList ',' . InitDecl

    NAME  shift, and go to state 9

    InitDecl  go to state 44


State 17

   51 VariableDeclaration: VAR VariableList ';' .

    $default  reduce using rule 51 (VariableDeclaration)


State 18

   11 FunctionParam: NAME .

    $default  reduce using rule 11 (FunctionParam)


State 19

    7 FunctionDeclaration: FUNCTION NAME '(' ')' . Block

    '{'  shift, and go to state 45

    Block  go to state 46


State 20

   10 FunctionParamList: ',' . VAR_LEN_PARAM

    VAR_LEN_PARAM  shift, and go to state 47


State 21

    6 FunctionDeclaration: FUNCTION NAME '(' FunctionParamList . ')' Block
    9 FunctionParamList: FunctionParamList . ',' FunctionParam

    ')'  shift, and go to state 48
    ','  shift, and go to state 49


State 22

    8 FunctionParamList: FunctionParam .

    $default  reduce using rule 8 (FunctionParamList)


State 23

  104 Literal: FALSE .

    $default  reduce using rule 104 (Literal)


State 24

  103 Literal: TRUE .

    $default  reduce using rule 103 (Literal)


State 25

  102 Literal: INT .

    $default  reduce using rule 102 (Literal)


State 26

  105 Literal: STRING .

    $default  reduce using rule 105 (Literal)


State 27

  107 Literal: NAME .

    $default  reduce using rule 107 (Literal)


State 28

  106 Literal: NULL_LITERAL .

    $default  reduce using rule 106 (Literal)


State 29

   98 FunctionExpression: FUNCTION . '(' FunctionParamList ')' Block LAMBDA
   99                   | FUNCTION . '(' ')' Block LAMBDA
  100                   | FUNCTION . NAME '(' FunctionParamList ')' Block LAMBDA
  101                   | FUNCTION . NAME '(' ')' Block LAMBDA

    NAME  shift, and go to state 50
    '('   shift, and go to state 51


State 30

   96 PrimaryExpression: '(' . Expression ')'

    FALSE         shift, and go to state 23
    TRUE          shift, and go to state 24
    INT           shift, and go to state 25
    STRING        shift, and go to state 26
    NAME          shift, and go to state 27
    NULL_LITERAL  shift, and go to state 28
    FUNCTION      shift, and go to state 29
    '('           shift, and go to state 30
    '!'           shift, and go to state 31

    Expression             go to state 52
    AssignmentExpression   go to state 53
    ConditionalExpression  go to state 34
    LogicalOrExpression    go to state 35
    LogicalANDExpression   go to state 36
    EqualityExpression     go to state 37
    RelationalExpression   go to state 38
    UnaryExpression        go to state 39
    PostfixExpression      go to state 40
    PrimaryExpression      go to state 41
    FunctionExpression     go to state 42
    Literal                go to state 43


State 31

   88 UnaryExpression: '!' . UnaryExpression

    FALSE         shift, and go to state 23
    TRUE          shift, and go to state 24
    INT           shift, and go to state 25
    STRING        shift, and go to state 26
    NAME          shift, and go to state 27
    NULL_LITERAL  shift, and go to state 28
    FUNCTION      shift, and go to state 29
    '('           shift, and go to state 30
    '!'           shift, and go to state 31

    UnaryExpression     go to state 54
    PostfixExpression   go to state 40
    PrimaryExpression   go to state 41
    FunctionExpression  go to state 42
    Literal             go to state 43


State 32

   55 InitDecl: NAME '=' Initializer .

    $default  reduce using rule 55 (InitDecl)


State 33

   56 Initializer: AssignmentExpression .

    $default  reduce using rule 56 (Initializer)


State 34

   60 AssignmentExpression: ConditionalExpression .
   74 ConditionalExpression: ConditionalExpression . '?' Expression ':' LogicalOrExpression

    '?'  shift, and go to state 55

    $default  reduce using rule 60 (AssignmentExpression)


State 35

   73 ConditionalExpression: LogicalOrExpression .
   76 LogicalOrExpression: LogicalOrExpression . OR LogicalANDExpression

    OR  shift, and go to state 56

    $default  reduce using rule 73 (ConditionalExpression)


State 36

   75 LogicalOrExpression: LogicalANDExpression .
   78 LogicalANDExpression: LogicalANDExpression . AND EqualityExpression

    AND  shift, and go to state 57

    $default  reduce using rule 75 (LogicalOrExpression)


State 37

   77 LogicalANDExpression: EqualityExpression .
   80 EqualityExpression: EqualityExpression . EQ RelationalExpression
   81                   | EqualityExpression . NE RelationalExpression

    EQ  shift, and go to state 58
    NE  shift, and go to state 59

    $default  reduce using rule 77 (LogicalANDExpression)


State 38

   79 EqualityExpression: RelationalExpression .
   83 RelationalExpression: RelationalExpression . '<' UnaryExpression
   84                     | RelationalExpression . '>' UnaryExpression
   85                     | RelationalExpression . LTEQ UnaryExpression
   86                     | RelationalExpression . GTEQ UnaryExpression

    GTEQ  shift, and go to state 60
    LTEQ  shift, and go to state 61
    '<'   shift, and go to state 62
    '>'   shift, and go to state 63

    $default  reduce using rule 79 (EqualityExpression)


State 39

   59 AssignmentExpression: UnaryExpression . AssignmentOperator AssignmentExpression
   82 RelationalExpression: UnaryExpression .

    AADD                shift, and go to state 64
    ASUB                shift, and go to state 65
    AMUL                shift, and go to state 66
    ADIV                shift, and go to state 67
    AMOD                shift, and go to state 68
    ALEFTSHIFT          shift, and go to state 69
    ARIGHTSHIFT         shift, and go to state 70
    ALOGICALRIGHTSHIFT  shift, and go to state 71
    ABITAND             shift, and go to state 72
    ABITXOR             shift, and go to state 73
    ABITOR              shift, and go to state 74
    '='                 shift, and go to state 75

    $default  reduce using rule 82 (RelationalExpression)

    AssignmentOperator  go to state 76


State 40

   87 UnaryExpression: PostfixExpression .

    $default  reduce using rule 87 (UnaryExpression)


State 41

   89 PostfixExpression: PrimaryExpression .
   90                  | PrimaryExpression . FunctionCall

    '('  shift, and go to state 77

    $default  reduce using rule 89 (PostfixExpression)

    FunctionCall  go to state 78


State 42

   97 PrimaryExpression: FunctionExpression .

    $default  reduce using rule 97 (PrimaryExpression)


State 43

   95 PrimaryExpression: Literal .

    $default  reduce using rule 95 (PrimaryExpression)


State 44

   53 VariableList: VariableList ',' InitDecl .

    $default  reduce using rule 53 (VariableList)


State 45

   12 Block: '{' . BlockInner '}'
   13      | '{' . '}'

    IF            shift, and go to state 79
    RETURN        shift, and go to state 80
    FALSE         shift, and go to state 23
    TRUE          shift, and go to state 24
    INT           shift, and go to state 25
    STRING        shift, and go to state 26
    NAME          shift, and go to state 27
    NULL_LITERAL  shift, and go to state 28
    FUNCTION      shift, and go to state 81
    VAR           shift, and go to state 2
    '('           shift, and go to state 30
    '{'           shift, and go to state 45
    '}'           shift, and go to state 82
    '!'           shift, and go to state 31

    Declaration            go to state 83
    FunctionDeclaration    go to state 6
    Block                  go to state 84
    BlockInner             go to state 85
    Statement              go to state 86
    IfStatement            go to state 87
    If1Statement           go to state 88
    If2Statement           go to state 89
    If3Statement           go to state 90
    If4Statement           go to state 91
    If5Statement           go to state 92
    If6Statement           go to state 93
    If7Statement           go to state 94
    If8Statement           go to state 95
    If9Statement           go to state 96
    IfAStatement           go to state 97
    IfBStatement           go to state 98
    IfCStatement           go to state 99
    ReturnStatement        go to state 100
    ExpressionStatement    go to state 101
    VariableDeclaration    go to state 7
    Expression             go to state 102
    AssignmentExpression   go to state 53
    ConditionalExpression  go to state 34
    LogicalOrExpression    go to state 35
    LogicalANDExpression   go to state 36
    EqualityExpression     go to state 37
    RelationalExpression   go to state 38
    UnaryExpression        go to state 39
    PostfixExpression      go to state 40
    PrimaryExpression      go to state 41
    FunctionExpression     go to state 42
    Literal                go to state 43


State 46

    7 FunctionDeclaration: FUNCTION NAME '(' ')' Block .

    $default  reduce using rule 7 (FunctionDeclaration)


State 47

   10 FunctionParamList: ',' VAR_LEN_PARAM .

    $default  reduce using rule 10 (FunctionParamList)


State 48

    6 FunctionDeclaration: FUNCTION NAME '(' FunctionParamList ')' . Block

    '{'  shift, and go to state 45

    Block  go to state 103


State 49

    9 FunctionParamList: FunctionParamList ',' . FunctionParam

    NAME  shift, and go to state 18

    FunctionParam  go to state 104


State 50

  100 FunctionExpression: FUNCTION NAME . '(' FunctionParamList ')' Block LAMBDA
  101                   | FUNCTION NAME . '(' ')' Block LAMBDA

    '('  shift, and go to state 105


State 51

   98 FunctionExpression: FUNCTION '(' . FunctionParamList ')' Block LAMBDA
   99                   | FUNCTION '(' . ')' Block LAMBDA

    NAME  shift, and go to state 18
    ')'   shift, and go to state 106
    ','   shift, and go to state 20

    FunctionParamList  go to state 107
    FunctionParam      go to state 22


State 52

   58 Expression: Expression . ',' AssignmentExpression
   96 PrimaryExpression: '(' Expression . ')'

    ')'  shift, and go to state 108
    ','  shift, and go to state 109


State 53

   57 Expression: AssignmentExpression .

    $default  reduce using rule 57 (Expression)


State 54

   88 UnaryExpression: '!' UnaryExpression .

    $default  reduce using rule 88 (UnaryExpression)


State 55

   74 ConditionalExpression: ConditionalExpression '?' . Expression ':' LogicalOrExpression

    FALSE         shift, and go to state 23
    TRUE          shift, and go to state 24
    INT           shift, and go to state 25
    STRING        shift, and go to state 26
    NAME          shift, and go to state 27
    NULL_LITERAL  shift, and go to state 28
    FUNCTION      shift, and go to state 29
    '('           shift, and go to state 30
    '!'           shift, and go to state 31

    Expression             go to state 110
    AssignmentExpression   go to state 53
    ConditionalExpression  go to state 34
    LogicalOrExpression    go to state 35
    LogicalANDExpression   go to state 36
    EqualityExpression     go to state 37
    RelationalExpression   go to state 38
    UnaryExpression        go to state 39
    PostfixExpression      go to state 40
    PrimaryExpression      go to state 41
    FunctionExpression     go to state 42
    Literal                go to state 43


State 56

   76 LogicalOrExpression: LogicalOrExpression OR . LogicalANDExpression

    FALSE         shift, and go to state 23
    TRUE          shift, and go to state 24
    INT           shift, and go to state 25
    STRING        shift, and go to state 26
    NAME          shift, and go to state 27
    NULL_LITERAL  shift, and go to state 28
    FUNCTION      shift, and go to state 29
    '('           shift, and go to state 30
    '!'           shift, and go to state 31

    LogicalANDExpression  go to state 111
    EqualityExpression    go to state 37
    RelationalExpression  go to state 38
    UnaryExpression       go to state 112
    PostfixExpression     go to state 40
    PrimaryExpression     go to state 41
    FunctionExpression    go to state 42
    Literal               go to state 43


State 57

   78 LogicalANDExpression: LogicalANDExpression AND . EqualityExpression

    FALSE         shift, and go to state 23
    TRUE          shift, and go to state 24
    INT           shift, and go to state 25
    STRING        shift, and go to state 26
    NAME          shift, and go to state 27
    NULL_LITERAL  shift, and go to state 28
    FUNCTION      shift, and go to state 29
    '('           shift, and go to state 30
    '!'           shift, and go to state 31

    EqualityExpression    go to state 113
    RelationalExpression  go to state 38
    UnaryExpression       go to state 112
    PostfixExpression     go to state 40
    PrimaryExpression     go to state 41
    FunctionExpression    go to state 42
    Literal               go to state 43


State 58

   80 EqualityExpression: EqualityExpression EQ . RelationalExpression

    FALSE         shift, and go to state 23
    TRUE          shift, and go to state 24
    INT           shift, and go to state 25
    STRING        shift, and go to state 26
    NAME          shift, and go to state 27
    NULL_LITERAL  shift, and go to state 28
    FUNCTION      shift, and go to state 29
    '('           shift, and go to state 30
    '!'           shift, and go to state 31

    RelationalExpression  go to state 114
    UnaryExpression       go to state 112
    PostfixExpression     go to state 40
    PrimaryExpression     go to state 41
    FunctionExpression    go to state 42
    Literal               go to state 43


State 59

   81 EqualityExpression: EqualityExpression NE . RelationalExpression

    FALSE         shift, and go to state 23
    TRUE          shift, and go to state 24
    INT           shift, and go to state 25
    STRING        shift, and go to state 26
    NAME          shift, and go to state 27
    NULL_LITERAL  shift, and go to state 28
    FUNCTION      shift, and go to state 29
    '('           shift, and go to state 30
    '!'           shift, and go to state 31

    RelationalExpression  go to state 115
    UnaryExpression       go to state 112
    PostfixExpression     go to state 40
    PrimaryExpression     go to state 41
    FunctionExpression    go to state 42
    Literal               go to state 43


State 60

   86 RelationalExpression: RelationalExpression GTEQ . UnaryExpression

    FALSE         shift, and go to state 23
    TRUE          shift, and go to state 24
    INT           shift, and go to state 25
    STRING        shift, and go to state 26
    NAME          shift, and go to state 27
    NULL_LITERAL  shift, and go to state 28
    FUNCTION      shift, and go to state 29
    '('           shift, and go to state 30
    '!'           shift, and go to state 31

    UnaryExpression     go to state 116
    PostfixExpression   go to state 40
    PrimaryExpression   go to state 41
    FunctionExpression  go to state 42
    Literal             go to state 43


State 61

   85 RelationalExpression: RelationalExpression LTEQ . UnaryExpression

    FALSE         shift, and go to state 23
    TRUE          shift, and go to state 24
    INT           shift, and go to state 25
    STRING        shift, and go to state 26
    NAME          shift, and go to state 27
    NULL_LITERAL  shift, and go to state 28
    FUNCTION      shift, and go to state 29
    '('           shift, and go to state 30
    '!'           shift, and go to state 31

    UnaryExpression     go to state 117
    PostfixExpression   go to state 40
    PrimaryExpression   go to state 41
    FunctionExpression  go to state 42
    Literal             go to state 43


State 62

   83 RelationalExpression: RelationalExpression '<' . UnaryExpression

    FALSE         shift, and go to state 23
    TRUE          shift, and go to state 24
    INT           shift, and go to state 25
    STRING        shift, and go to state 26
    NAME          shift, and go to state 27
    NULL_LITERAL  shift, and go to state 28
    FUNCTION      shift, and go to state 29
    '('           shift, and go to state 30
    '!'           shift, and go to state 31

    UnaryExpression     go to state 118
    PostfixExpression   go to state 40
    PrimaryExpression   go to state 41
    FunctionExpression  go to state 42
    Literal             go to state 43


State 63

   84 RelationalExpression: RelationalExpression '>' . UnaryExpression

    FALSE         shift, and go to state 23
    TRUE          shift, and go to state 24
    INT           shift, and go to state 25
    STRING        shift, and go to state 26
    NAME          shift, and go to state 27
    NULL_LITERAL  shift, and go to state 28
    FUNCTION      shift, and go to state 29
    '('           shift, and go to state 30
    '!'           shift, and go to state 31

    UnaryExpression     go to state 119
    PostfixExpression   go to state 40
    PrimaryExpression   go to state 41
    FunctionExpression  go to state 42
    Literal             go to state 43


State 64

   65 AssignmentOperator: AADD .

    $default  reduce using rule 65 (AssignmentOperator)


State 65

   66 AssignmentOperator: ASUB .

    $default  reduce using rule 66 (AssignmentOperator)


State 66

   62 AssignmentOperator: AMUL .

    $default  reduce using rule 62 (AssignmentOperator)


State 67

   63 AssignmentOperator: ADIV .

    $default  reduce using rule 63 (AssignmentOperator)


State 68

   64 AssignmentOperator: AMOD .

    $default  reduce using rule 64 (AssignmentOperator)


State 69

   67 AssignmentOperator: ALEFTSHIFT .

    $default  reduce using rule 67 (AssignmentOperator)


State 70

   68 AssignmentOperator: ARIGHTSHIFT .

    $default  reduce using rule 68 (AssignmentOperator)


State 71

   69 AssignmentOperator: ALOGICALRIGHTSHIFT .

    $default  reduce using rule 69 (AssignmentOperator)


State 72

   70 AssignmentOperator: ABITAND .

    $default  reduce using rule 70 (AssignmentOperator)


State 73

   71 AssignmentOperator: ABITXOR .

    $default  reduce using rule 71 (AssignmentOperator)


State 74

   72 AssignmentOperator: ABITOR .

    $default  reduce using rule 72 (AssignmentOperator)


State 75

   61 AssignmentOperator: '=' .

    $default  reduce using rule 61 (AssignmentOperator)


State 76

   59 AssignmentExpression: UnaryExpression AssignmentOperator . AssignmentExpression

    FALSE         shift, and go to state 23
    TRUE          shift, and go to state 24
    INT           shift, and go to state 25
    STRING        shift, and go to state 26
    NAME          shift, and go to state 27
    NULL_LITERAL  shift, and go to state 28
    FUNCTION      shift, and go to state 29
    '('           shift, and go to state 30
    '!'           shift, and go to state 31

    AssignmentExpression   go to state 120
    ConditionalExpression  go to state 34
    LogicalOrExpression    go to state 35
    LogicalANDExpression   go to state 36
    EqualityExpression     go to state 37
    RelationalExpression   go to state 38
    UnaryExpression        go to state 39
    PostfixExpression      go to state 40
    PrimaryExpression      go to state 41
    FunctionExpression     go to state 42
    Literal                go to state 43


State 77

   91 FunctionCall: '(' . ArgumentExpressionList ')'
   92             | '(' . ')'

    FALSE         shift, and go to state 23
    TRUE          shift, and go to state 24
    INT           shift, and go to state 25
    STRING        shift, and go to state 26
    NAME          shift, and go to state 27
    NULL_LITERAL  shift, and go to state 28
    FUNCTION      shift, and go to state 29
    '('           shift, and go to state 30
    ')'           shift, and go to state 121
    '!'           shift, and go to state 31

    AssignmentExpression    go to state 122
    ConditionalExpression   go to state 34
    LogicalOrExpression     go to state 35
    LogicalANDExpression    go to state 36
    EqualityExpression      go to state 37
    RelationalExpression    go to state 38
    UnaryExpression         go to state 39
    PostfixExpression       go to state 40
    ArgumentExpressionList  go to state 123
    PrimaryExpression       go to state 41
    FunctionExpression      go to state 42
    Literal                 go to state 43


State 78

   90 PostfixExpression: PrimaryExpression FunctionCall .

    $default  reduce using rule 90 (PostfixExpression)


State 79

   34 IfStatement: IF . '(' Expression ')' Block
   35            | IF . '(' Expression ')' Block ELSE Block
   36 If1Statement: IF . '(' Expression ')' Block ELSE1 Block
   37 If2Statement: IF . '(' Expression ')' Block ELSE2 Block
   38 If3Statement: IF . '(' Expression ')' Block ELSE3 Block
   39 If4Statement: IF . '(' Expression ')' Block ELSE4 Block
   40 If5Statement: IF . '(' Expression ')' Block ELSE5 Block
   41 If6Statement: IF . '(' Expression ')' Block ELSE6 Block
   42 If7Statement: IF . '(' Expression ')' Block ELSE7 Block
   43 If8Statement: IF . '(' Expression ')' Block ELSE8 Block
   44 If9Statement: IF . '(' Expression ')' Block ELSE9 Block
   45 IfAStatement: IF . '(' Expression ')' Block ELSEA Block
   46 IfBStatement: IF . '(' Expression ')' Block ELSEB Block
   47 IfCStatement: IF . '(' Expression ')' Block ELSEC Block

    '('  shift, and go to state 124


State 80

   48 ReturnStatement: RETURN . ';'
   49                | RETURN . Expression ';'

    FALSE         shift, and go to state 23
    TRUE          shift, and go to state 24
    INT           shift, and go to state 25
    STRING        shift, and go to state 26
    NAME          shift, and go to state 27
    NULL_LITERAL  shift, and go to state 28
    FUNCTION      shift, and go to state 29
    '('           shift, and go to state 30
    ';'           shift, and go to state 125
    '!'           shift, and go to state 31

    Expression             go to state 126
    AssignmentExpression   go to state 53
    ConditionalExpression  go to state 34
    LogicalOrExpression    go to state 35
    LogicalANDExpression   go to state 36
    EqualityExpression     go to state 37
    RelationalExpression   go to state 38
    UnaryExpression        go to state 39
    PostfixExpression      go to state 40
    PrimaryExpression      go to state 41
    FunctionExpression     go to state 42
    Literal                go to state 43


State 81

    6 FunctionDeclaration: FUNCTION . NAME '(' FunctionParamList ')' Block
    7                    | FUNCTION . NAME '(' ')' Block
   98 FunctionExpression: FUNCTION . '(' FunctionParamList ')' Block LAMBDA
   99                   | FUNCTION . '(' ')' Block LAMBDA
  100                   | FUNCTION . NAME '(' FunctionParamList ')' Block LAMBDA
  101                   | FUNCTION . NAME '(' ')' Block LAMBDA

    NAME  shift, and go to state 127
    '('   shift, and go to state 51


State 82

   13 Block: '{' '}' .

    $default  reduce using rule 13 (Block)


State 83

   15 BlockInner: Declaration .

    $default  reduce using rule 15 (BlockInner)


State 84

   18 Statement: Block .

    $default  reduce using rule 18 (Statement)


State 85

   12 Block: '{' BlockInner . '}'
   16 BlockInner: BlockInner . Statement
   17           | BlockInner . Declaration

    IF            shift, and go to state 79
    RETURN        shift, and go to state 80
    FALSE         shift, and go to state 23
    TRUE          shift, and go to state 24
    INT           shift, and go to state 25
    STRING        shift, and go to state 26
    NAME          shift, and go to state 27
    NULL_LITERAL  shift, and go to state 28
    FUNCTION      shift, and go to state 81
    VAR           shift, and go to state 2
    '('           shift, and go to state 30
    '{'           shift, and go to state 45
    '}'           shift, and go to state 128
    '!'           shift, and go to state 31

    Declaration            go to state 129
    FunctionDeclaration    go to state 6
    Block                  go to state 84
    Statement              go to state 130
    IfStatement            go to state 87
    If1Statement           go to state 88
    If2Statement           go to state 89
    If3Statement           go to state 90
    If4Statement           go to state 91
    If5Statement           go to state 92
    If6Statement           go to state 93
    If7Statement           go to state 94
    If8Statement           go to state 95
    If9Statement           go to state 96
    IfAStatement           go to state 97
    IfBStatement           go to state 98
    IfCStatement           go to state 99
    ReturnStatement        go to state 100
    ExpressionStatement    go to state 101
    VariableDeclaration    go to state 7
    Expression             go to state 102
    AssignmentExpression   go to state 53
    ConditionalExpression  go to state 34
    LogicalOrExpression    go to state 35
    LogicalANDExpression   go to state 36
    EqualityExpression     go to state 37
    RelationalExpression   go to state 38
    UnaryExpression        go to state 39
    PostfixExpression      go to state 40
    PrimaryExpression      go to state 41
    FunctionExpression     go to state 42
    Literal                go to state 43


State 86

   14 BlockInner: Statement .

    $default  reduce using rule 14 (BlockInner)


State 87

   19 Statement: IfStatement .

    $default  reduce using rule 19 (Statement)


State 88

   20 Statement: If1Statement .

    $default  reduce using rule 20 (Statement)


State 89

   21 Statement: If2Statement .

    $default  reduce using rule 21 (Statement)


State 90

   22 Statement: If3Statement .

    $default  reduce using rule 22 (Statement)


State 91

   23 Statement: If4Statement .

    $default  reduce using rule 23 (Statement)


State 92

   24 Statement: If5Statement .

    $default  reduce using rule 24 (Statement)


State 93

   25 Statement: If6Statement .

    $default  reduce using rule 25 (Statement)


State 94

   26 Statement: If7Statement .

    $default  reduce using rule 26 (Statement)


State 95

   27 Statement: If8Statement .

    $default  reduce using rule 27 (Statement)


State 96

   28 Statement: If9Statement .

    $default  reduce using rule 28 (Statement)


State 97

   29 Statement: IfAStatement .

    $default  reduce using rule 29 (Statement)


State 98

   30 Statement: IfBStatement .

    $default  reduce using rule 30 (Statement)


State 99

   31 Statement: IfCStatement .

    $default  reduce using rule 31 (Statement)


State 100

   32 Statement: ReturnStatement .

    $default  reduce using rule 32 (Statement)


State 101

   33 Statement: ExpressionStatement .

    $default  reduce using rule 33 (Statement)


State 102

   50 ExpressionStatement: Expression . ';'
   58 Expression: Expression . ',' AssignmentExpression

    ','  shift, and go to state 109
    ';'  shift, and go to state 131


State 103

    6 FunctionDeclaration: FUNCTION NAME '(' FunctionParamList ')' Block .

    $default  reduce using rule 6 (FunctionDeclaration)


State 104

    9 FunctionParamList: FunctionParamList ',' FunctionParam .

    $default  reduce using rule 9 (FunctionParamList)


State 105

  100 FunctionExpression: FUNCTION NAME '(' . FunctionParamList ')' Block LAMBDA
  101                   | FUNCTION NAME '(' . ')' Block LAMBDA

    NAME  shift, and go to state 18
    ')'   shift, and go to state 132
    ','   shift, and go to state 20

    FunctionParamList  go to state 133
    FunctionParam      go to state 22


State 106

   99 FunctionExpression: FUNCTION '(' ')' . Block LAMBDA

    '{'  shift, and go to state 45

    Block  go to state 134


State 107

    9 FunctionParamList: FunctionParamList . ',' FunctionParam
   98 FunctionExpression: FUNCTION '(' FunctionParamList . ')' Block LAMBDA

    ')'  shift, and go to state 135
    ','  shift, and go to state 49


State 108

   96 PrimaryExpression: '(' Expression ')' .

    $default  reduce using rule 96 (PrimaryExpression)


State 109

   58 Expression: Expression ',' . AssignmentExpression

    FALSE         shift, and go to state 23
    TRUE          shift, and go to state 24
    INT           shift, and go to state 25
    STRING        shift, and go to state 26
    NAME          shift, and go to state 27
    NULL_LITERAL  shift, and go to state 28
    FUNCTION      shift, and go to state 29
    '('           shift, and go to state 30
    '!'           shift, and go to state 31

    AssignmentExpression   go to state 136
    ConditionalExpression  go to state 34
    LogicalOrExpression    go to state 35
    LogicalANDExpression   go to state 36
    EqualityExpression     go to state 37
    RelationalExpression   go to state 38
    UnaryExpression        go to state 39
    PostfixExpression      go to state 40
    PrimaryExpression      go to state 41
    FunctionExpression     go to state 42
    Literal                go to state 43


State 110

   58 Expression: Expression . ',' AssignmentExpression
   74 ConditionalExpression: ConditionalExpression '?' Expression . ':' LogicalOrExpression

    ','  shift, and go to state 109
    ':'  shift, and go to state 137


State 111

   76 LogicalOrExpression: LogicalOrExpression OR LogicalANDExpression .
   78 LogicalANDExpression: LogicalANDExpression . AND EqualityExpression

    AND  shift, and go to state 57

    $default  reduce using rule 76 (LogicalOrExpression)


State 112

   82 RelationalExpression: UnaryExpression .

    $default  reduce using rule 82 (RelationalExpression)


State 113

   78 LogicalANDExpression: LogicalANDExpression AND EqualityExpression .
   80 EqualityExpression: EqualityExpression . EQ RelationalExpression
   81                   | EqualityExpression . NE RelationalExpression

    EQ  shift, and go to state 58
    NE  shift, and go to state 59

    $default  reduce using rule 78 (LogicalANDExpression)


State 114

   80 EqualityExpression: EqualityExpression EQ RelationalExpression .
   83 RelationalExpression: RelationalExpression . '<' UnaryExpression
   84                     | RelationalExpression . '>' UnaryExpression
   85                     | RelationalExpression . LTEQ UnaryExpression
   86                     | RelationalExpression . GTEQ UnaryExpression

    GTEQ  shift, and go to state 60
    LTEQ  shift, and go to state 61
    '<'   shift, and go to state 62
    '>'   shift, and go to state 63

    $default  reduce using rule 80 (EqualityExpression)


State 115

   81 EqualityExpression: EqualityExpression NE RelationalExpression .
   83 RelationalExpression: RelationalExpression . '<' UnaryExpression
   84                     | RelationalExpression . '>' UnaryExpression
   85                     | RelationalExpression . LTEQ UnaryExpression
   86                     | RelationalExpression . GTEQ UnaryExpression

    GTEQ  shift, and go to state 60
    LTEQ  shift, and go to state 61
    '<'   shift, and go to state 62
    '>'   shift, and go to state 63

    $default  reduce using rule 81 (EqualityExpression)


State 116

   86 RelationalExpression: RelationalExpression GTEQ UnaryExpression .

    $default  reduce using rule 86 (RelationalExpression)


State 117

   85 RelationalExpression: RelationalExpression LTEQ UnaryExpression .

    $default  reduce using rule 85 (RelationalExpression)


State 118

   83 RelationalExpression: RelationalExpression '<' UnaryExpression .

    $default  reduce using rule 83 (RelationalExpression)


State 119

   84 RelationalExpression: RelationalExpression '>' UnaryExpression .

    $default  reduce using rule 84 (RelationalExpression)


State 120

   59 AssignmentExpression: UnaryExpression AssignmentOperator AssignmentExpression .

    $default  reduce using rule 59 (AssignmentExpression)


State 121

   92 FunctionCall: '(' ')' .

    $default  reduce using rule 92 (FunctionCall)


State 122

   93 ArgumentExpressionList: AssignmentExpression .

    $default  reduce using rule 93 (ArgumentExpressionList)


State 123

   91 FunctionCall: '(' ArgumentExpressionList . ')'
   94 ArgumentExpressionList: ArgumentExpressionList . ',' AssignmentExpression

    ')'  shift, and go to state 138
    ','  shift, and go to state 139


State 124

   34 IfStatement: IF '(' . Expression ')' Block
   35            | IF '(' . Expression ')' Block ELSE Block
   36 If1Statement: IF '(' . Expression ')' Block ELSE1 Block
   37 If2Statement: IF '(' . Expression ')' Block ELSE2 Block
   38 If3Statement: IF '(' . Expression ')' Block ELSE3 Block
   39 If4Statement: IF '(' . Expression ')' Block ELSE4 Block
   40 If5Statement: IF '(' . Expression ')' Block ELSE5 Block
   41 If6Statement: IF '(' . Expression ')' Block ELSE6 Block
   42 If7Statement: IF '(' . Expression ')' Block ELSE7 Block
   43 If8Statement: IF '(' . Expression ')' Block ELSE8 Block
   44 If9Statement: IF '(' . Expression ')' Block ELSE9 Block
   45 IfAStatement: IF '(' . Expression ')' Block ELSEA Block
   46 IfBStatement: IF '(' . Expression ')' Block ELSEB Block
   47 IfCStatement: IF '(' . Expression ')' Block ELSEC Block

    FALSE         shift, and go to state 23
    TRUE          shift, and go to state 24
    INT           shift, and go to state 25
    STRING        shift, and go to state 26
    NAME          shift, and go to state 27
    NULL_LITERAL  shift, and go to state 28
    FUNCTION      shift, and go to state 29
    '('           shift, and go to state 30
    '!'           shift, and go to state 31

    Expression             go to state 140
    AssignmentExpression   go to state 53
    ConditionalExpression  go to state 34
    LogicalOrExpression    go to state 35
    LogicalANDExpression   go to state 36
    EqualityExpression     go to state 37
    RelationalExpression   go to state 38
    UnaryExpression        go to state 39
    PostfixExpression      go to state 40
    PrimaryExpression      go to state 41
    FunctionExpression     go to state 42
    Literal                go to state 43


State 125

   48 ReturnStatement: RETURN ';' .

    $default  reduce using rule 48 (ReturnStatement)


State 126

   49 ReturnStatement: RETURN Expression . ';'
   58 Expression: Expression . ',' AssignmentExpression

    ','  shift, and go to state 109
    ';'  shift, and go to state 141


State 127

    6 FunctionDeclaration: FUNCTION NAME . '(' FunctionParamList ')' Block
    7                    | FUNCTION NAME . '(' ')' Block
  100 FunctionExpression: FUNCTION NAME . '(' FunctionParamList ')' Block LAMBDA
  101                   | FUNCTION NAME . '(' ')' Block LAMBDA

    '('  shift, and go to state 142


State 128

   12 Block: '{' BlockInner '}' .

    $default  reduce using rule 12 (Block)


State 129

   17 BlockInner: BlockInner Declaration .

    $default  reduce using rule 17 (BlockInner)


State 130

   16 BlockInner: BlockInner Statement .

    $default  reduce using rule 16 (BlockInner)


State 131

   50 ExpressionStatement: Expression ';' .

    $default  reduce using rule 50 (ExpressionStatement)


State 132

  101 FunctionExpression: FUNCTION NAME '(' ')' . Block LAMBDA

    '{'  shift, and go to state 45

    Block  go to state 143


State 133

    9 FunctionParamList: FunctionParamList . ',' FunctionParam
  100 FunctionExpression: FUNCTION NAME '(' FunctionParamList . ')' Block LAMBDA

    ')'  shift, and go to state 144
    ','  shift, and go to state 49


State 134

   99 FunctionExpression: FUNCTION '(' ')' Block . LAMBDA

    LAMBDA  shift, and go to state 145


State 135

   98 FunctionExpression: FUNCTION '(' FunctionParamList ')' . Block LAMBDA

    '{'  shift, and go to state 45

    Block  go to state 146


State 136

   58 Expression: Expression ',' AssignmentExpression .

    $default  reduce using rule 58 (Expression)


State 137

   74 ConditionalExpression: ConditionalExpression '?' Expression ':' . LogicalOrExpression

    FALSE         shift, and go to state 23
    TRUE          shift, and go to state 24
    INT           shift, and go to state 25
    STRING        shift, and go to state 26
    NAME          shift, and go to state 27
    NULL_LITERAL  shift, and go to state 28
    FUNCTION      shift, and go to state 29
    '('           shift, and go to state 30
    '!'           shift, and go to state 31

    LogicalOrExpression   go to state 147
    LogicalANDExpression  go to state 36
    EqualityExpression    go to state 37
    RelationalExpression  go to state 38
    UnaryExpression       go to state 112
    PostfixExpression     go to state 40
    PrimaryExpression     go to state 41
    FunctionExpression    go to state 42
    Literal               go to state 43


State 138

   91 FunctionCall: '(' ArgumentExpressionList ')' .

    $default  reduce using rule 91 (FunctionCall)


State 139

   94 ArgumentExpressionList: ArgumentExpressionList ',' . AssignmentExpression

    FALSE         shift, and go to state 23
    TRUE          shift, and go to state 24
    INT           shift, and go to state 25
    STRING        shift, and go to state 26
    NAME          shift, and go to state 27
    NULL_LITERAL  shift, and go to state 28
    FUNCTION      shift, and go to state 29
    '('           shift, and go to state 30
    '!'           shift, and go to state 31

    AssignmentExpression   go to state 148
    ConditionalExpression  go to state 34
    LogicalOrExpression    go to state 35
    LogicalANDExpression   go to state 36
    EqualityExpression     go to state 37
    RelationalExpression   go to state 38
    UnaryExpression        go to state 39
    PostfixExpression      go to state 40
    PrimaryExpression      go to state 41
    FunctionExpression     go to state 42
    Literal                go to state 43


State 140

   34 IfStatement: IF '(' Expression . ')' Block
   35            | IF '(' Expression . ')' Block ELSE Block
   36 If1Statement: IF '(' Expression . ')' Block ELSE1 Block
   37 If2Statement: IF '(' Expression . ')' Block ELSE2 Block
   38 If3Statement: IF '(' Expression . ')' Block ELSE3 Block
   39 If4Statement: IF '(' Expression . ')' Block ELSE4 Block
   40 If5Statement: IF '(' Expression . ')' Block ELSE5 Block
   41 If6Statement: IF '(' Expression . ')' Block ELSE6 Block
   42 If7Statement: IF '(' Expression . ')' Block ELSE7 Block
   43 If8Statement: IF '(' Expression . ')' Block ELSE8 Block
   44 If9Statement: IF '(' Expression . ')' Block ELSE9 Block
   45 IfAStatement: IF '(' Expression . ')' Block ELSEA Block
   46 IfBStatement: IF '(' Expression . ')' Block ELSEB Block
   47 IfCStatement: IF '(' Expression . ')' Block ELSEC Block
   58 Expression: Expression . ',' AssignmentExpression

    ')'  shift, and go to state 149
    ','  shift, and go to state 109


State 141

   49 ReturnStatement: RETURN Expression ';' .

    $default  reduce using rule 49 (ReturnStatement)


State 142

    6 FunctionDeclaration: FUNCTION NAME '(' . FunctionParamList ')' Block
    7                    | FUNCTION NAME '(' . ')' Block
  100 FunctionExpression: FUNCTION NAME '(' . FunctionParamList ')' Block LAMBDA
  101                   | FUNCTION NAME '(' . ')' Block LAMBDA

    NAME  shift, and go to state 18
    ')'   shift, and go to state 150
    ','   shift, and go to state 20

    FunctionParamList  go to state 151
    FunctionParam      go to state 22


State 143

  101 FunctionExpression: FUNCTION NAME '(' ')' Block . LAMBDA

    LAMBDA  shift, and go to state 152


State 144

  100 FunctionExpression: FUNCTION NAME '(' FunctionParamList ')' . Block LAMBDA

    '{'  shift, and go to state 45

    Block  go to state 153


State 145

   99 FunctionExpression: FUNCTION '(' ')' Block LAMBDA .

    $default  reduce using rule 99 (FunctionExpression)


State 146

   98 FunctionExpression: FUNCTION '(' FunctionParamList ')' Block . LAMBDA

    LAMBDA  shift, and go to state 154


State 147

   74 ConditionalExpression: ConditionalExpression '?' Expression ':' LogicalOrExpression .
   76 LogicalOrExpression: LogicalOrExpression . OR LogicalANDExpression

    OR  shift, and go to state 56

    $default  reduce using rule 74 (ConditionalExpression)


State 148

   94 ArgumentExpressionList: ArgumentExpressionList ',' AssignmentExpression .

    $default  reduce using rule 94 (ArgumentExpressionList)


State 149

   34 IfStatement: IF '(' Expression ')' . Block
   35            | IF '(' Expression ')' . Block ELSE Block
   36 If1Statement: IF '(' Expression ')' . Block ELSE1 Block
   37 If2Statement: IF '(' Expression ')' . Block ELSE2 Block
   38 If3Statement: IF '(' Expression ')' . Block ELSE3 Block
   39 If4Statement: IF '(' Expression ')' . Block ELSE4 Block
   40 If5Statement: IF '(' Expression ')' . Block ELSE5 Block
   41 If6Statement: IF '(' Expression ')' . Block ELSE6 Block
   42 If7Statement: IF '(' Expression ')' . Block ELSE7 Block
   43 If8Statement: IF '(' Expression ')' . Block ELSE8 Block
   44 If9Statement: IF '(' Expression ')' . Block ELSE9 Block
   45 IfAStatement: IF '(' Expression ')' . Block ELSEA Block
   46 IfBStatement: IF '(' Expression ')' . Block ELSEB Block
   47 IfCStatement: IF '(' Expression ')' . Block ELSEC Block

    '{'  shift, and go to state 45

    Block  go to state 155


State 150

    7 FunctionDeclaration: FUNCTION NAME '(' ')' . Block
  101 FunctionExpression: FUNCTION NAME '(' ')' . Block LAMBDA

    '{'  shift, and go to state 45

    Block  go to state 156


State 151

    6 FunctionDeclaration: FUNCTION NAME '(' FunctionParamList . ')' Block
    9 FunctionParamList: FunctionParamList . ',' FunctionParam
  100 FunctionExpression: FUNCTION NAME '(' FunctionParamList . ')' Block LAMBDA

    ')'  shift, and go to state 157
    ','  shift, and go to state 49


State 152

  101 FunctionExpression: FUNCTION NAME '(' ')' Block LAMBDA .

    $default  reduce using rule 101 (FunctionExpression)


State 153

  100 FunctionExpression: FUNCTION NAME '(' FunctionParamList ')' Block . LAMBDA

    LAMBDA  shift, and go to state 158


State 154

   98 FunctionExpression: FUNCTION '(' FunctionParamList ')' Block LAMBDA .

    $default  reduce using rule 98 (FunctionExpression)


State 155

   34 IfStatement: IF '(' Expression ')' Block .
   35            | IF '(' Expression ')' Block . ELSE Block
   36 If1Statement: IF '(' Expression ')' Block . ELSE1 Block
   37 If2Statement: IF '(' Expression ')' Block . ELSE2 Block
   38 If3Statement: IF '(' Expression ')' Block . ELSE3 Block
   39 If4Statement: IF '(' Expression ')' Block . ELSE4 Block
   40 If5Statement: IF '(' Expression ')' Block . ELSE5 Block
   41 If6Statement: IF '(' Expression ')' Block . ELSE6 Block
   42 If7Statement: IF '(' Expression ')' Block . ELSE7 Block
   43 If8Statement: IF '(' Expression ')' Block . ELSE8 Block
   44 If9Statement: IF '(' Expression ')' Block . ELSE9 Block
   45 IfAStatement: IF '(' Expression ')' Block . ELSEA Block
   46 IfBStatement: IF '(' Expression ')' Block . ELSEB Block
   47 IfCStatement: IF '(' Expression ')' Block . ELSEC Block

    ELSE   shift, and go to state 159
    ELSE1  shift, and go to state 160
    ELSE2  shift, and go to state 161
    ELSE3  shift, and go to state 162
    ELSE4  shift, and go to state 163
    ELSE5  shift, and go to state 164
    ELSE6  shift, and go to state 165
    ELSE7  shift, and go to state 166
    ELSE8  shift, and go to state 167
    ELSE9  shift, and go to state 168
    ELSEA  shift, and go to state 169
    ELSEB  shift, and go to state 170
    ELSEC  shift, and go to state 171

    $default  reduce using rule 34 (IfStatement)


State 156

    7 FunctionDeclaration: FUNCTION NAME '(' ')' Block .
  101 FunctionExpression: FUNCTION NAME '(' ')' Block . LAMBDA

    LAMBDA  shift, and go to state 152

    $default  reduce using rule 7 (FunctionDeclaration)


State 157

    6 FunctionDeclaration: FUNCTION NAME '(' FunctionParamList ')' . Block
  100 FunctionExpression: FUNCTION NAME '(' FunctionParamList ')' . Block LAMBDA

    '{'  shift, and go to state 45

    Block  go to state 172


State 158

  100 FunctionExpression: FUNCTION NAME '(' FunctionParamList ')' Block LAMBDA .

    $default  reduce using rule 100 (FunctionExpression)


State 159

   35 IfStatement: IF '(' Expression ')' Block ELSE . Block

    '{'  shift, and go to state 45

    Block  go to state 173


State 160

   36 If1Statement: IF '(' Expression ')' Block ELSE1 . Block

    '{'  shift, and go to state 45

    Block  go to state 174


State 161

   37 If2Statement: IF '(' Expression ')' Block ELSE2 . Block

    '{'  shift, and go to state 45

    Block  go to state 175


State 162

   38 If3Statement: IF '(' Expression ')' Block ELSE3 . Block

    '{'  shift, and go to state 45

    Block  go to state 176


State 163

   39 If4Statement: IF '(' Expression ')' Block ELSE4 . Block

    '{'  shift, and go to state 45

    Block  go to state 177


State 164

   40 If5Statement: IF '(' Expression ')' Block ELSE5 . Block

    '{'  shift, and go to state 45

    Block  go to state 178


State 165

   41 If6Statement: IF '(' Expression ')' Block ELSE6 . Block

    '{'  shift, and go to state 45

    Block  go to state 179


State 166

   42 If7Statement: IF '(' Expression ')' Block ELSE7 . Block

    '{'  shift, and go to state 45

    Block  go to state 180


State 167

   43 If8Statement: IF '(' Expression ')' Block ELSE8 . Block

    '{'  shift, and go to state 45

    Block  go to state 181


State 168

   44 If9Statement: IF '(' Expression ')' Block ELSE9 . Block

    '{'  shift, and go to state 45

    Block  go to state 182


State 169

   45 IfAStatement: IF '(' Expression ')' Block ELSEA . Block

    '{'  shift, and go to state 45

    Block  go to state 183


State 170

   46 IfBStatement: IF '(' Expression ')' Block ELSEB . Block

    '{'  shift, and go to state 45

    Block  go to state 184


State 171

   47 IfCStatement: IF '(' Expression ')' Block ELSEC . Block

    '{'  shift, and go to state 45

    Block  go to state 185


State 172

    6 FunctionDeclaration: FUNCTION NAME '(' FunctionParamList ')' Block .
  100 FunctionExpression: FUNCTION NAME '(' FunctionParamList ')' Block . LAMBDA

    LAMBDA  shift, and go to state 158

    $default  reduce using rule 6 (FunctionDeclaration)


State 173

   35 IfStatement: IF '(' Expression ')' Block ELSE Block .

    $default  reduce using rule 35 (IfStatement)


State 174

   36 If1Statement: IF '(' Expression ')' Block ELSE1 Block .

    $default  reduce using rule 36 (If1Statement)


State 175

   37 If2Statement: IF '(' Expression ')' Block ELSE2 Block .

    $default  reduce using rule 37 (If2Statement)


State 176

   38 If3Statement: IF '(' Expression ')' Block ELSE3 Block .

    $default  reduce using rule 38 (If3Statement)


State 177

   39 If4Statement: IF '(' Expression ')' Block ELSE4 Block .

    $default  reduce using rule 39 (If4Statement)


State 178

   40 If5Statement: IF '(' Expression ')' Block ELSE5 Block .

    $default  reduce using rule 40 (If5Statement)


State 179

   41 If6Statement: IF '(' Expression ')' Block ELSE6 Block .

    $default  reduce using rule 41 (If6Statement)


State 180

   42 If7Statement: IF '(' Expression ')' Block ELSE7 Block .

    $default  reduce using rule 42 (If7Statement)


State 181

   43 If8Statement: IF '(' Expression ')' Block ELSE8 Block .

    $default  reduce using rule 43 (If8Statement)


State 182

   44 If9Statement: IF '(' Expression ')' Block ELSE9 Block .

    $default  reduce using rule 44 (If9Statement)


State 183

   45 IfAStatement: IF '(' Expression ')' Block ELSEA Block .

    $default  reduce using rule 45 (IfAStatement)


State 184

   46 IfBStatement: IF '(' Expression ')' Block ELSEB Block .

    $default  reduce using rule 46 (IfBStatement)


State 185

   47 IfCStatement: IF '(' Expression ')' Block ELSEC Block .

    $default  reduce using rule 47 (IfCStatement)
